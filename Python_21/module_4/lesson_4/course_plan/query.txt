-- create table courses(
--     course_id serial primary key ,
--     name varchar(50) not null ,
--     created_at date
-- );

-- create table students(
--     id serial primary key ,
--     first_name varchar(255),
--     last_name varchar(255),
--     email varchar(255),
--     course_id integer references courses(course_id),
--     created_at date default timezone('Asia/Tashkent' , current_date::timestamptz)
-- );


                    1 task
1) lesson_4 nomli database yaratamiz          游릭
2) course and student table yaratamiz         游릭
3) tabllarini ichini malumotga to'ldiramiz    游릭

                    2 task
1) lesson_4 nomli database yaratamiz                    游릭
2) author_book and authors and books  table yaratamiz   游릭
3) shu table lar ichga malumot to'ldiramiz              游릭



                    3 task
1) kitoblar nechta ligini oladigan query yozilsin  # 15:53                   游릭
    select count(*) from books;

2) A , B , R harflari bilan boshlangan name authorlar topilsin (*) # 15:55   游릭
    select * from authors where name like 'A%' or name like 'B%' or name like 'R%';


3) idsi 2 ,3 bo'lgan authorni kitoblari nechta !    游릭
    select count(book_id) from book_author where author_id = 2 or author_id = 3 group by author_id;

4) kitoblari soni 20 tadan kop bo'lgan author id toping !    游릭
    select author_id from author_book group by author_id having count(book_id) > 20;

5) author_id juft bo'lganlarini kitoblar soni chiqarilsin    游릭 (author_id,book_count)
    select author_id , count(book_id) book_count from author_book where author_id % 2 = 0 group_by author_id;


6) eng kop kitobga ega bo'lgan author_id topilsin !


7) postgres -> password '2';


authors , author_book
8) author name , kitoblar soni !

select a.name , count(ab.book_id) from authors a
inner join author_book ab on ab.author_id = a.id
group by a.id;



















