-- begin;
-- savepoint test;
-- update departments set name = 'botir' where id = 1;
--
-- release savepoint test;
--
-- rollback;
-- select EXP(2);
--
-- select trunc(random()*100);
--
--
-- create sequence postgres_seq
-- increment 1
-- start 1;

-- drop sequence postgres_seq;
--
-- select nextval('postgres_seq');
-- alter sequence postgres_seq restart 1;
--
-- create table products(
--     id integer primary key default nextval('postgres_seq'),
--     name varchar
-- );

-- begin ;
--
--     savepoint test;
--     update departments set name = 'Botir' where id =1;
--     delete from products where id =1;
--     insert into products (name) values ('Mouse');
--     savepoint test2;
--     insert into products (name) values ('Mouse');
--
-- rollback to savepoint test2;
-- commit;

-- payment
--     user1 (balance 102 000)
--         +100 000
--
--     user2 (balance 90 000)
--         -100 000


create table if not exists students(
    id serial primary key ,
    name varchar,
    username varchar
);
alter table students add constraint username_uq unique(username);
drop table students;
-- +1 000 000

insert into students (name , username)
select md5((generate_series+1)::varchar) ,md5((generate_series+2)::varchar)
from generate_series(1, 1000000);

select count(*) from students;
100000000

-- created_at
-- from_date , to_date


