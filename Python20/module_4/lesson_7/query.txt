select replace(column_name, 'l', 'o')
from table;


select ascii('a');
select chr(97);

select concat('Hello ', 'World');
select concat(column1, ' ', column2)
from table_name;

select lower(concat(a.first_name, ' ', a.last_name))
from actor a;


select lower('SDfgeghdFGH');

select upper(concat(a.first_name, ' ', a.last_name))
from actor a;

select upper('SDfgeghdFGH');



select substr(first_name, 2, 5)
from actor;



-- 1 task Actor table
-- year  | month  | day


-- 2 task Actor table
-- first_name (l[0])
-- John(D)

select trim('     salom  helloo oo', 'o');
select ltrim();
select rtrim();

select length('salom');
select length(123456543::varchar);


select mod(11, 4);



-- film film_id % 2 == 0

-- film_id | title

select 2 ^ 4;
select power(2, 4);


select |/16;

select sqrt(81);
select sqrt(16);

select power(8, 1 / 3::float);

select SIGN(-100);

select extract(year from date('2000-11-02'));



-- create function function_name(a int  , b int)
--    returns int
--    language plpgsql
--   as
-- $$
--
-- begin
--     return a + b;
-- end;
-- $$;
--
-- select * from function_name(10 , 20)

do
$$
    declare
        i int;
        result varchar ;
    begin
        for i in 1..length('1234') loop
            if substr('1234' , i , 1) = '2' then
                result := concat(result , '7');
            else result := concat(result , substr('1234' , i , 1));
            end if;
        end loop;
        raise notice '%' , result;
    end
$$;
--
--
-- do
-- $$
--     declare
--         tmp int;
--     begin
--         tmp = 0;
--         while tmp < 10 loop
--             raise notice '%' , tmp;
--             tmp := tmp + 1;
--         end loop;
--     end;
-- $$;

-- create function replace_(matn text , old_char varchar , new_char varchar)
-- returns text
-- language plpgsql
-- as
--     $$
--     declare
--         i int;
--         result text ;
--     begin
--         for i in 1..length(matn) loop
--             if substr(matn , i , 1) = old_char then
--                 result := concat(result , new_char);
--             else result := concat(result , substr(matn , i , 1));
--             end if;
--         end loop;
--         return result;
--     end
--     $$;
--
-- drop function replace_(matn text, old_char varchar, new_char varchar);
--
-- select * from replace_('12234' , '2' , '7')



-- amount_filter(min_amount , max_amount) - > payment

create function is_length(len int)
returns SETOF public.actor
language plpgsql
    as
$$
    begin
        return QUERY
        select a.* from actor a where length(a.first_name) = len;
    end;
$$;

drop function is_length(len int);

select * from is_length(2);


create function amount_filter(min_ float , max float)
returns SETOF public.payment
language plpgsql
    as
$$
    begin
        return QUERY
        select a.* from payment a where a.amount between min_ and max;
    end;
$$;

select amount from amount_filter(1 , 2);



-- name_filter(name varchar) - > payment

create function name_filter(name_ varchar)
returns table(first_name varchar , films text , count_ bigint)
language plpgsql
    as
$$
    begin
        return QUERY
        select a.first_name , string_agg(f.title , ',')  , count(f.film_id) as count_ from actor a
        join film_actor fa on a.actor_id = fa.actor_id
        join film f on f.film_id = fa.film_id
        where a.first_name = name_
        group by a.actor_id;
    end;
$$;

drop function name_filter(name_ varchar);

select * from name_filter('Ed');


select a.first_name , string_agg(f.title , ',')  , count(f.film_id) as count_ from actor a
        join film_actor fa on a.actor_id = fa.actor_id
        join film f on f.film_id = fa.film_id
        where a.first_name = 'Ed'
        group by a.actor_id;

















